<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sLazer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-4</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>timer = 0

shooting = false

pooptimer = 3
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!instance_exists(o_ufo_boss)) or ( !instance_exists(o_player) ) { instance_destroy() exit }

timer ++;

x = o_ufo_boss.x;
y = o_ufo_boss.y + 21;

if ((timer) &gt; (room_speed * 5)) {
    
    shooting = room_speed / 3
    timer = 0
    pooptimer ++
    sound = audio_play_sound(aPew,1,false)
    audio_sound_pitch(sound,random_range(.8,1))
    audio_sound_gain(sound,0.05,0);
    
}

if pooptimer &gt; 4 {
    pooptimer = 0
    
    repeat (4) {
        with (instance_create(x,y,o_pink_boy)) {
            motion_set_custom(2,random(360))
        }
    }

}


if shooting &lt;= 0 {
    image_angle = angle_rotate_towards(image_angle,point_direction(x,y,o_player.x,o_player.y-8),.5)
} else {
    shooting --;
    image_angle = angle_rotate_towards(image_angle,point_direction(x,y,o_player.x,o_player.y-8),.1)
}










</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

colo = make_color_hsv(sin(timer/100)*255,255,255);
sizo = 5 + (sin(timer/2));
lengo = 500



if shooting {
    draw_set_color(colo);
    draw_line_width(x,y,x + lengthdir_x(lengo,image_angle),y + lengthdir_y(lengo,image_angle),sizo)
    draw_set_color(merge_color(colo,c_white,.5));
    draw_line_width(x,y,x + lengthdir_x(lengo,image_angle),y + lengthdir_y(lengo,image_angle),sizo/2)
    draw_set_color(c_white);
    draw_line_width(x,y,x + lengthdir_x(lengo,image_angle),y + lengthdir_y(lengo,image_angle),sizo/3)
    if collision_line(x,y,x + lengthdir_x(lengo,image_angle),y + lengthdir_y(lengo,image_angle),o_player,true,true) {
        o_player.hp -= .75;
        repeat (1) {
            with (instance_create(o_player.x,o_player.y,o_blood_drop)) {
                motion_set_custom(random(2),random(360))
            }
        }
    }
    
}

draw_self()

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
