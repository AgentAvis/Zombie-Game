<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>phys = false

xsquish = 1
ysquish = 1

organic = true //do i bleed

oldgrounded = false
grounded = false //am i on the ground? purely an initialization variable, dont change this plz thx

blood_color = c_red

canclimb = false
climbspeed = 1

hp = 100;
maxHp = 100;
ammount = 0;

//Set the distance it 'sees' the player
sight = 1000;

//Set the speed of the enemy
walk_spd = 0;

//Alarm for hitting the player and attack speed
alarm[0] = room_speed * 1;

attackSpeed = room_speed * .5;

//The can hit variable
canHit = true;

//For determining appearance
type = irandom_range(0,image_number);

//hop stuff
hop = 0
hopspeed = 0

//set up the new speed variables
hsp = 0
vsp = 0

dhsp = 0//used for ai

//how heavy am i
mass = 1

//money multiplier
wealth = 1
image_speed = 0;

hops = true //use hop system

explodeamt = 0 //counts down from the last time exploded

damage = 1

ehsp = 0
evsp = 0

shotcount = 0 //jumps up when shot and then counts back down

//Knockback Resistance
k_r = 1;


//If they are a boss or not
isBoss = false;
name = "";

sprite = sNull_lifeform
back_sprite = sNull_lifeform

hashpbar = false

//Zombie_Sounds
playsSound = true;
s_emit = audio_emitter_create();
audio_emitter_falloff(s_emit,150,600,1);
alarm[1] = room_speed * irandom_range(35,65);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>repeat (irandom_range(6,10)) {
    with (instance_create(x,y,o_blood_drop)) {
        blood_color = other.blood_color
        motion_set_custom(random_range(2,6),random(360))
        
    }
}
with (instance_create(x,y,o_zombie_dead)) {

    sprite_index = other.sprite_index
    image_index = other.type
    image_yscale = other.image_xscale;
    hsp = other.hsp
    vsp = other.vsp
    vsp -= .5
    mass = other.mass
    
}

audio_emitter_free(s_emit);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(playsSound){
    var uno = irandom_range(0,4);
    var snd = noone;
    if(uno == 0){
    snd = zombie1;
    }
    if(uno == 1){
    snd = zombie2;
    }
    if(uno == 2){
    snd = zombie3;
    }
    if(uno == 3){
    snd = zombie4;
    }
    if(uno == 4){
    snd = zombie5;
    }
    
    /*
    audio_sound_pitch(snd,random_range(-5,5));
    audio_play_sound_at(snd, x, y, 0, 50, 150, 3, false, 1);
    */
    audio_emitter_pitch(s_emit, random_range(-2,2));
    audio_play_sound_on(s_emit, snd, false, 1);
}
alarm[1] = room_speed * irandom_range(35,65);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canHit = true;
alarm[0] = attackSpeed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_enemy_walk();

xsquish = lerp(xsquish,1,.1)

explodeamt -= 1
explodeamt = clamp(explodeamt,0,1000)

//Sound
audio_emitter_position(s_emit,x,y,0);

if hops {
    hop += hopspeed
    if hop &lt; 0 { hopspeed += .05 } else {
    hopspeed = -.5 hop = 0
    }
}


if(hp &lt;= 0){
    repeat (irandom(10)) {
        instance_create(x,y,o_coin)
    }
    repeat (irandom(5*wealth)) {
        instance_create(x,y,o_dollar);
    }
instance_destroy();
}

if(canHit){
    if point_distance(x,y,o_player.x,o_player.y) &lt; 6 {
        o_player.hp -= damage;
        //ex_camera_set_flash_color("main",c_red);
        //ex_camera_flash("main",0.5,15);
        //ex_camera_shake("main",4,1,0,3);
        canHit = false;
    }
}

shotcount --
shotcount = clamp(shotcount,0,60)

sprite_index = sprite

if y &lt; o_player.y+1 and y &gt; o_player.y-1 { shotcount += 10 }

if (y+10 &gt; o_player.y and canclimb and shotcount &lt;= 0 and y != o_player.y and ((y &lt; gr - 20) or (o_player.y &lt; gr - 20))) {
    building = instance_place(x,y+8,oBuilding)
    if instance_exists(building) and point_distance(x,1,o_player.x,1) &lt; 170  {
        
        vsp = clamp(vsp,-999,0)
        //if vsp &lt;= 0 { vsp = 0 }
        y -= climbspeed
        if !place_meeting(x,y,oRoof_top) { sprite_index = sprite_climb }
        if sprite_index = sprite_climb {with (building) { if random(32) &lt; 1 { y += .001 }}}
    }
}
apply_speeds_and_gravity()


//x += hsp * global.timescale;
//y += vsp * global.timescale;

if grounded {
    //hsp = clamp(hsp,-walk_spd,walk_spd)
    if abs(hsp) &gt; walk_spd { hsp *= .9 }
} 

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(isBoss){
draw_boss_health_bar(32,25,name, 100);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_self();
//commented out because children draw over this
if(!isBoss) and hashpbar {
var wid = sprite_get_width(sprite_index)
draw_healthbar(x - wid/2, y - sprite_height - 4, x + wid/2, y - sprite_height - 2, (hp/maxHp) * 100, c_black, c_red, c_green, 1, true, false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
