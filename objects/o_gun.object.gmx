<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_guns</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
image_angle = 0;

//Barrel width and Length(Unused)
barrel_length = -3;
barrel_height = -1;
//Sprite index/Gun selected
spr = 0;
//Gun Damage
dmg = 1;
//Accuracy(1-10)
accuracy = 1;
//Firerate(In Seconds)
firerate = 1;
//Shake ammount
shake = 0;
//Enemy Knockback(Unimplemented)
knockback = 0;
//Can Fire
canFire = true;
//Offsets for gun handling
offsetX = 0;
offsetY = 0;
//Ammo for each of the guns
ammo[0] = 100;
ammo[1] = 100;
ammo[2] = 100;
ammo[3] = 100;
//Accuracy Modifier
acMin = -1;
acMax = 1;

//Has laser attachment
hasLaser = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canFire = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = o_player.x;
y = o_player.y + o_player.hop;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//A direction variable pointing to the mouse.
var mousedir = point_direction(x,y,mouse_x,mouse_y);

//Always draw above the player
depth = o_player.depth - 1;

//Firing the gun
if(canFire and mouse_check_button(mb_left) and ammo[spr] &gt; 0){
//Setting up the for loop
var i = 0;
var mx = 1;
//For the shotgun
if(spr == 2){
mx = 5;
}
barrel_x = lengthdir_x(barrel_length, mousedir);
barrel_y = lengthdir_y(barrel_height, mousedir);
for(i = 0; i &lt; mx; i++){
//Create an instance of bullet
p = instance_create(x + barrel_x,y + barrel_y,o_bullet);
//Set that bullets variables
p.dir = mousedir + (accuracy * random_range(acMax,acMin));
p.dmg = dmg;
p.shake = shake;
//Set a force
var xforce = lengthdir_x(5, p.dir);
var yforce = lengthdir_y(5, p.dir);
//Apply the force.
with(p){
        physics_apply_impulse(x,y,xforce,yforce);
       }
}
//Decrease the ammo
ammo[spr]--;
//Set the alarm for the fire rate
alarm[0] = firerate * room_speed;
//Set can fire to false
canFire = false;

}


//Select a gun
//Pistol
if(spr == 1){
dmg = 1;
accuracy = 3;
firerate = 1;
shake = 1;
knockback = 0;
offsetX = 8;
offsetY = 9;
}
//Uzi
if(spr == 0){
dmg = 1;
accuracy = 7;
firerate = 0.1;
shake = 0.25;
offsetX = 9;
offsetY = 10;
}
//SawnOff
if(spr == 2){
dmg = 1;
accuracy = 7;
firerate = 3;
shake = 30;
offsetX = 7;
offsetY = 10;
}
//SawnOff
if(spr == 3){
dmg = 1;
accuracy = 8;
firerate = 0.2;
shake = 30;
offsetX = 7;
offsetY = 8;
}


if(keyboard_check_pressed(ord('H'))){
spr += 1;
canFire = true;
if(spr &gt; 3){
spr = 0;
}
}

if(keyboard_check_pressed(ord('G'))){
hasLaser = !hasLaser;
}

image_angle = mousedir;
if (mousedir &gt;= 90 and mousedir &lt;= 270)
{
    image_yscale = -1;
    depth = -y-3;
}
else 
{
    image_yscale = 1;
    depth = -y-7;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_white)
draw_text(0,0,"Ammo:" + string(ammo[spr]));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(hasLaser){
    var mousedir = point_direction(x,y,mouse_x,mouse_y);
    
    //draw_line_width_colour(x,y,x + lengthdir_x(20,image_angle), y + lengthdir_y(20,image_angle),1,c_red, c_black);
    //draw_set_color(c_red)
    //draw_set_alpha(.15)
    
    lazer_point = collision_line_point(x,y,mouse_x,mouse_y,o_lifeform,true,true)
    draw_line_ext(x,y,lazer_point[1],lazer_point[2],.5,c_red,.5,0)

    draw_set_alpha(1);
    
    acMin = -0.5;
    acMax = 0.5;

}else{
    acMin = -1;
    acMax = 1;
}

draw_sprite_ext(s_guns,spr,x,y + 1,image_xscale,image_yscale,image_angle,c_white,1);
sprite_set_offset(s_guns, offsetX, offsetY);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
