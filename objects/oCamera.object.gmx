<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = 0
y = 0

globalvar zoom_allow;
zoom_allow = 2
 
static = false

truex = x
truey = y

shaketime = 0
screenshake = false
cam_x = 0
cam_y = 0
global.focus = noone

ZM_big = 3
ZM_real = 0

SHOT = noone
iwaittime = 0
waittime = 0
dviewx = view_wview[0]
dviewy = view_hview[0]
ZM = 1
lock = false
existed = false
stopped = false

oldx = x
oldy = y
r = 2
YESYES = false
t = noone
ot = t

mode = 0

tarx = x
tary = y

global.camfocus = noone
submode = 3
mousemode = true

draw_x = x
draw_y = y

x = 0
y = 0

slimer = 0
MC = false
oldmode = mode

shakemag = 0

room_Actual = true;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//shakemag = 0

if static exit;  
              
        if keyboard_check(vk_shift) {
            if keyboard_check(ord("1")) { ZM = 1 }
            if keyboard_check(ord("2")) { ZM = .5 }        
            if keyboard_check(ord("3")) { ZM = .25 } 
            if keyboard_check(ord("4")) { ZM = .25/2 }         
        }
        //unit = .01


        if (room != r_menu) and (room != rInit) {
        
            if mouse_wheel_up() { ZM_big -= 1 }
            if mouse_wheel_down() { ZM_big += 1 }
            
            //if mouse_wheel_up() { ZM -= unit }
            //if mouse_wheel_down() { ZM += unit }
        }
        
        //ZM = clamp(ZM,.2,1)
        
        //if ZM_big &gt; 4 { ZM_big = 1 }
        //if ZM_big &lt; 1 { ZM_big = 4 }
         
        ZM_big = clamp(ZM_big,1,zoom_allow)
        
        if ZM_big = 4 { ZM = 1 }        
        if ZM_big = 3 { ZM = .5 }  
        if ZM_big = 2 { ZM = .25 }          
        if ZM_big = 1 { ZM = .125 }      
        ZM_real = lerp(ZM_real,ZM,.1)    
        if(!room_Actual){
            view_wview[0] = browser_width * clamp(ZM_real,.125,1)
            view_hview[0] = browser_height * clamp(ZM_real,.125,1)
        }
        //surface_resize(application_surface,browser_width,browser_height)
        surface_resize( application_surface, browser_width, browser_height);

        
        
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if static exit;

//if instance_exists(o_player) { global.focus = o_player mode = 1}

//if keyboard_check_pressed(ord("K")) { screenshake = !screenshake } 

if shaketime &gt; 0 { shaketime -- screenshake = true } else { screenshake = false }

//shakemag = 10
if screenshake = true {
    shakex = random_range(-shakemag,shakemag)*ZM
    shakey = random_range(-shakemag,shakemag)*ZM
} else {
    shakex = 0
    shakey = 0
}

if room = r_menu { mode = 0 } //dont follow a non-existant player on the menu


//center the view and call it good
if mode = 0 { cam_x = room_width/2 cam_y = room_height/2 }


//center on the player
if mode = 1 {
    //figure out where we want the camera to be
    if(!mousemode){
    cam_x = global.focus.x 
    cam_y = global.focus.y
    }else{
    tarx = global.focus.x 
    tary = global.focus.y
    cam_x = lerp(tarx,mouse_x,.2)
    cam_y = lerp(tary,mouse_y,.2)
    }

}



//make it smooth/set final x and y
x = lerp(x,cam_x,.2);
y = lerp(y,cam_y,.2);


//view centering
view_xview[0] = (x - ((view_wview[0])/2))+shakex
view_yview[0] = y - ((view_hview[0])/2)+shakey

if view_yview[0] &gt; gr - ((view_hview[0]-32)) { view_yview[0] = gr - ((view_hview[0]-32))+shakey }

hspd = x - xprevious
vspd = y - yprevious
truex += hspd
truey += vspd


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
