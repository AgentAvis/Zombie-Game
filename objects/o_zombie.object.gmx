<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_zombies_3</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_lifeform</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
phys = false
//Set the health
hp = 25;
maxHp = 25;
//Set the distance it 'sees' the player
sight = 180;
//Set the speed of the enemy
walk_spd = random_range(0.25,0.5);
if phys {
    //Set the rotation to be fixed.
    phy_fixed_rotation = true;
}
//Alarm for hitting the player and attack speed
alarm[0] = room_speed * 1;
attackSpeed = room_speed * .5;
//The can hit variable
canHit = true;
//For determining appearance
type = irandom_range(0,image_number);
//hop stuff
hop = 0
hopspeed = 0
//set up the new speed variables
hsp = 0
vsp = 0

dhsp = 0//used for ai



//how heavy am i
mass = 1
image_speed = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>repeat (irandom_range(5,20))
with (instance_create(x,y,o_blood_drop)) {
    motion_set_custom(random_range(2,6),random(360))
    
}

with (instance_create(x,y,o_zombie_dead)) {

    sprite_index = other.sprite_index
    image_index = other.type
    image_yscale = other.image_xscale;
    //vsp = -1
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canHit = true;
alarm[0] = attackSpeed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_enemy_walk();




hop += hopspeed
if hop &lt; 0 { hopspeed += .05 } else {
hopspeed = -.5 hop = 0
}


if(hp &lt;= 0){
    repeat (irandom(10)) {
        instance_create(x,y,o_coin)
    }
    repeat (irandom(5)) {
        instance_create(x,y,o_dollar);
    }
instance_destroy();

}

if(canHit){
    if point_distance(x,y,o_player.x,o_player.y) &lt; 6 {
        o_player.hp -= 1;
        ex_camera_set_flash_color("main",c_red);
        ex_camera_flash("main",0.5,15);
        ex_camera_shake("main",4,1,0,3);
        canHit = false;
    }
}





apply_speeds_and_gravity()
//x += hsp * global.timescale;
//y += vsp * global.timescale;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_ex_camera">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
if(canHit){
    other.hp -= 1;
    ex_camera_set_flash_color("main",c_red);
    ex_camera_flash("main",0.5,15);
    ex_camera_shake("main",4,1,0,3);
    canHit = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
draw_sprite_ext(sprite_index,type,x,y+hop,image_xscale,1,image_angle,c_white,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
